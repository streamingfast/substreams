// Code generated by Substreams. DO NOT EDIT.
use crate::pb;
use substreams::errors::Error;

pub struct Substreams{}

pub trait SubstreamsTrait {

    fn map_block(
        block: substreams_ethereum::pb::eth::v2::Block,
    ) -> Result<pb::my_types_v1::Tests, Error>;

    fn map_block_i64(
        block: substreams_ethereum::pb::eth::v2::Block,
    ) -> Result<pb::my_types_v1::Number, Error>;

    fn store_test(
        block: substreams_ethereum::pb::eth::v2::Block,
        map_block: pb::my_types_v1::Tests,
        store: substreams::store::StoreSetProto<pb::my_types_v1::Test>,
    );

    fn store_append_string(
        block: substreams_ethereum::pb::eth::v2::Block,
        store: substreams::store::StoreAppend<String>,
    );

    fn store_bigint(
        block: substreams_ethereum::pb::eth::v2::Block,
        store: substreams::store::StoreSetBigInt,
    );

    fn store_test2(
        block: substreams_ethereum::pb::eth::v2::Block,
        map_block: pb::my_types_v1::Tests,
        store_test: substreams::store::StoreGetProto<pb::my_types_v1::Test>,
        store_test_deltas: substreams::store::Deltas<substreams::store::DeltaProto<pb::my_types_v1::Test>>,
        map_block_i64: pb::my_types_v1::Number,
        store_bigint: substreams::store::StoreGetBigInt,
        store_bigint_deltas: substreams::store::Deltas<substreams::store::DeltaBigInt>,
        store_append_string: substreams::store::StoreGetRaw,
        store_append_string_deltas: substreams::store::Deltas<substreams::store::DeltaArray<String>>,
        store: substreams::store::StoreSetProto<pb::my_types_v1::Test>,
    );
}



