// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: sf/codegen/conversation/v1/conversation.proto

package pbconvo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemOutput_ListSelect_SelectType int32

const (
	SystemOutput_ListSelect_DROPDOWN SystemOutput_ListSelect_SelectType = 0
	SystemOutput_ListSelect_BUTTONS  SystemOutput_ListSelect_SelectType = 1
)

// Enum value maps for SystemOutput_ListSelect_SelectType.
var (
	SystemOutput_ListSelect_SelectType_name = map[int32]string{
		0: "DROPDOWN",
		1: "BUTTONS",
	}
	SystemOutput_ListSelect_SelectType_value = map[string]int32{
		"DROPDOWN": 0,
		"BUTTONS":  1,
	}
)

func (x SystemOutput_ListSelect_SelectType) Enum() *SystemOutput_ListSelect_SelectType {
	p := new(SystemOutput_ListSelect_SelectType)
	*p = x
	return p
}

func (x SystemOutput_ListSelect_SelectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemOutput_ListSelect_SelectType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_codegen_conversation_v1_conversation_proto_enumTypes[0].Descriptor()
}

func (SystemOutput_ListSelect_SelectType) Type() protoreflect.EnumType {
	return &file_sf_codegen_conversation_v1_conversation_proto_enumTypes[0]
}

func (x SystemOutput_ListSelect_SelectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemOutput_ListSelect_SelectType.Descriptor instead.
func (SystemOutput_ListSelect_SelectType) EnumDescriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 2, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{0}
}

type UserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId        uint32 `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // Monotonic incrementing number
	FromMsgId    uint32 `protobuf:"varint,2,opt,name=from_msg_id,json=fromMsgId,proto3" json:"from_msg_id,omitempty"`
	FromActionId string `protobuf:"bytes,3,opt,name=from_action_id,json=fromActionId,proto3" json:"from_action_id,omitempty"`
	// Types that are assignable to Entry:
	//
	//	*UserInput_Start_
	//	*UserInput_TextInput_
	//	*UserInput_Selection_
	//	*UserInput_Confirmation_
	//	*UserInput_File
	//	*UserInput_DownloadedFiles_
	Entry isUserInput_Entry `protobuf_oneof:"entry"`
}

func (x *UserInput) Reset() {
	*x = UserInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput) ProtoMessage() {}

func (x *UserInput) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput.ProtoReflect.Descriptor instead.
func (*UserInput) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *UserInput) GetMsgId() uint32 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *UserInput) GetFromMsgId() uint32 {
	if x != nil {
		return x.FromMsgId
	}
	return 0
}

func (x *UserInput) GetFromActionId() string {
	if x != nil {
		return x.FromActionId
	}
	return ""
}

func (m *UserInput) GetEntry() isUserInput_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *UserInput) GetStart() *UserInput_Start {
	if x, ok := x.GetEntry().(*UserInput_Start_); ok {
		return x.Start
	}
	return nil
}

func (x *UserInput) GetTextInput() *UserInput_TextInput {
	if x, ok := x.GetEntry().(*UserInput_TextInput_); ok {
		return x.TextInput
	}
	return nil
}

func (x *UserInput) GetSelection() *UserInput_Selection {
	if x, ok := x.GetEntry().(*UserInput_Selection_); ok {
		return x.Selection
	}
	return nil
}

func (x *UserInput) GetConfirmation() *UserInput_Confirmation {
	if x, ok := x.GetEntry().(*UserInput_Confirmation_); ok {
		return x.Confirmation
	}
	return nil
}

func (x *UserInput) GetFile() *UserInput_Upload {
	if x, ok := x.GetEntry().(*UserInput_File); ok {
		return x.File
	}
	return nil
}

func (x *UserInput) GetDownloadedFiles() *UserInput_DownloadedFiles {
	if x, ok := x.GetEntry().(*UserInput_DownloadedFiles_); ok {
		return x.DownloadedFiles
	}
	return nil
}

type isUserInput_Entry interface {
	isUserInput_Entry()
}

type UserInput_Start_ struct {
	Start *UserInput_Start `protobuf:"bytes,11,opt,name=start,proto3,oneof"`
}

type UserInput_TextInput_ struct {
	TextInput *UserInput_TextInput `protobuf:"bytes,15,opt,name=text_input,json=textInput,proto3,oneof"`
}

type UserInput_Selection_ struct {
	Selection *UserInput_Selection `protobuf:"bytes,17,opt,name=selection,proto3,oneof"`
}

type UserInput_Confirmation_ struct {
	Confirmation *UserInput_Confirmation `protobuf:"bytes,18,opt,name=confirmation,proto3,oneof"`
}

type UserInput_File struct {
	File *UserInput_Upload `protobuf:"bytes,16,opt,name=file,proto3,oneof"`
}

type UserInput_DownloadedFiles_ struct {
	DownloadedFiles *UserInput_DownloadedFiles `protobuf:"bytes,20,opt,name=downloaded_files,json=downloadedFiles,proto3,oneof"`
}

func (*UserInput_Start_) isUserInput_Entry() {}

func (*UserInput_TextInput_) isUserInput_Entry() {}

func (*UserInput_Selection_) isUserInput_Entry() {}

func (*UserInput_Confirmation_) isUserInput_Entry() {}

func (*UserInput_File) isUserInput_Entry() {}

func (*UserInput_DownloadedFiles_) isUserInput_Entry() {}

type SystemOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId          uint32 `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // unique message ID
	FromMsgId      uint32 `protobuf:"varint,2,opt,name=from_msg_id,json=fromMsgId,proto3" json:"from_msg_id,omitempty"`
	ActionId       string `protobuf:"bytes,3,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`                   // the type of action that is required here, tags like "confirm_final" or "select_subgraph" or "select_network", so the UI can hook into the response the user will take here.
	State          string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`                                         // to be saved each step, if connection drops, Init back with this state
	StateSignature []byte `protobuf:"bytes,5,opt,name=state_signature,json=stateSignature,proto3" json:"state_signature,omitempty"` // Optional, or future ?
	// Types that are assignable to Entry:
	//
	//	*SystemOutput_Message_
	//	*SystemOutput_ImageWithText_
	//	*SystemOutput_ListSelect_
	//	*SystemOutput_TextInput_
	//	*SystemOutput_Confirm_
	//	*SystemOutput_Loading_
	//	*SystemOutput_DownloadFiles_
	Entry isSystemOutput_Entry `protobuf_oneof:"entry"`
}

func (x *SystemOutput) Reset() {
	*x = SystemOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput) ProtoMessage() {}

func (x *SystemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput.ProtoReflect.Descriptor instead.
func (*SystemOutput) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *SystemOutput) GetMsgId() uint32 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *SystemOutput) GetFromMsgId() uint32 {
	if x != nil {
		return x.FromMsgId
	}
	return 0
}

func (x *SystemOutput) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *SystemOutput) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SystemOutput) GetStateSignature() []byte {
	if x != nil {
		return x.StateSignature
	}
	return nil
}

func (m *SystemOutput) GetEntry() isSystemOutput_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *SystemOutput) GetMessage() *SystemOutput_Message {
	if x, ok := x.GetEntry().(*SystemOutput_Message_); ok {
		return x.Message
	}
	return nil
}

func (x *SystemOutput) GetImageWithText() *SystemOutput_ImageWithText {
	if x, ok := x.GetEntry().(*SystemOutput_ImageWithText_); ok {
		return x.ImageWithText
	}
	return nil
}

func (x *SystemOutput) GetListSelect() *SystemOutput_ListSelect {
	if x, ok := x.GetEntry().(*SystemOutput_ListSelect_); ok {
		return x.ListSelect
	}
	return nil
}

func (x *SystemOutput) GetTextInput() *SystemOutput_TextInput {
	if x, ok := x.GetEntry().(*SystemOutput_TextInput_); ok {
		return x.TextInput
	}
	return nil
}

func (x *SystemOutput) GetConfirm() *SystemOutput_Confirm {
	if x, ok := x.GetEntry().(*SystemOutput_Confirm_); ok {
		return x.Confirm
	}
	return nil
}

func (x *SystemOutput) GetLoading() *SystemOutput_Loading {
	if x, ok := x.GetEntry().(*SystemOutput_Loading_); ok {
		return x.Loading
	}
	return nil
}

func (x *SystemOutput) GetDownloadFiles() *SystemOutput_DownloadFiles {
	if x, ok := x.GetEntry().(*SystemOutput_DownloadFiles_); ok {
		return x.DownloadFiles
	}
	return nil
}

type isSystemOutput_Entry interface {
	isSystemOutput_Entry()
}

type SystemOutput_Message_ struct {
	Message *SystemOutput_Message `protobuf:"bytes,15,opt,name=message,proto3,oneof"` // Markdown message to display
}

type SystemOutput_ImageWithText_ struct {
	ImageWithText *SystemOutput_ImageWithText `protobuf:"bytes,16,opt,name=image_with_text,json=imageWithText,proto3,oneof"`
}

type SystemOutput_ListSelect_ struct {
	ListSelect *SystemOutput_ListSelect `protobuf:"bytes,17,opt,name=list_select,json=listSelect,proto3,oneof"`
}

type SystemOutput_TextInput_ struct {
	TextInput *SystemOutput_TextInput `protobuf:"bytes,18,opt,name=text_input,json=textInput,proto3,oneof"`
}

type SystemOutput_Confirm_ struct {
	Confirm *SystemOutput_Confirm `protobuf:"bytes,21,opt,name=confirm,proto3,oneof"`
}

type SystemOutput_Loading_ struct {
	Loading *SystemOutput_Loading `protobuf:"bytes,19,opt,name=loading,proto3,oneof"`
}

type SystemOutput_DownloadFiles_ struct {
	DownloadFiles *SystemOutput_DownloadFiles `protobuf:"bytes,20,opt,name=download_files,json=downloadFiles,proto3,oneof"`
}

func (*SystemOutput_Message_) isSystemOutput_Entry() {}

func (*SystemOutput_ImageWithText_) isSystemOutput_Entry() {}

func (*SystemOutput_ListSelect_) isSystemOutput_Entry() {}

func (*SystemOutput_TextInput_) isSystemOutput_Entry() {}

func (*SystemOutput_Confirm_) isSystemOutput_Entry() {}

func (*SystemOutput_Loading_) isSystemOutput_Entry() {}

func (*SystemOutput_DownloadFiles_) isSystemOutput_Entry() {}

type DiscoveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerms string `protobuf:"bytes,1,opt,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
}

func (x *DiscoveryRequest) Reset() {
	*x = DiscoveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryRequest) ProtoMessage() {}

func (x *DiscoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryRequest.ProtoReflect.Descriptor instead.
func (*DiscoveryRequest) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *DiscoveryRequest) GetSearchTerms() string {
	if x != nil {
		return x.SearchTerms
	}
	return ""
}

type DiscoveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generators []*DiscoveryResponse_Generator `protobuf:"bytes,1,rep,name=generators,proto3" json:"generators,omitempty"`
}

func (x *DiscoveryResponse) Reset() {
	*x = DiscoveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryResponse) ProtoMessage() {}

func (x *DiscoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryResponse.ProtoReflect.Descriptor instead.
func (*DiscoveryResponse) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *DiscoveryResponse) GetGenerators() []*DiscoveryResponse_Generator {
	if x != nil {
		return x.Generators
	}
	return nil
}

type UserInput_TextInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UserInput_TextInput) Reset() {
	*x = UserInput_TextInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput_TextInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput_TextInput) ProtoMessage() {}

func (x *UserInput_TextInput) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput_TextInput.ProtoReflect.Descriptor instead.
func (*UserInput_TextInput) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UserInput_TextInput) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UserInput_Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// generator_id routes the conversation to the right generator backend
	GeneratorId string `protobuf:"bytes,1,opt,name=generator_id,json=generatorId,proto3" json:"generator_id,omitempty"`
	// Hydrate will be present when the user already has a pre-built state, and wants to continue from there.
	Hydrate *UserInput_Hydrate `protobuf:"bytes,2,opt,name=hydrate,proto3" json:"hydrate,omitempty"`
	// Version of the supported protocol by the client.
	// If the code generator requires a more recent client, then it should also report an error, or try to downgrade the conversation protocol.
	Version uint32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UserInput_Start) Reset() {
	*x = UserInput_Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput_Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput_Start) ProtoMessage() {}

func (x *UserInput_Start) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput_Start.ProtoReflect.Descriptor instead.
func (*UserInput_Start) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1, 1}
}

func (x *UserInput_Start) GetGeneratorId() string {
	if x != nil {
		return x.GeneratorId
	}
	return ""
}

func (x *UserInput_Start) GetHydrate() *UserInput_Hydrate {
	if x != nil {
		return x.Hydrate
	}
	return nil
}

func (x *UserInput_Start) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type UserInput_Hydrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If `saved_payload` is none, then just start a new session.
	SavedState        string `protobuf:"bytes,1,opt,name=saved_state,json=savedState,proto3" json:"saved_state,omitempty"`                       // JSON state from a previous session, to continue where we left off.
	Signature         []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`                                           // HMAC sig from the server for the saved_payload. Optional.
	LastMsgId         uint32 `protobuf:"varint,3,opt,name=last_msg_id,json=lastMsgId,proto3" json:"last_msg_id,omitempty"`                       // whatever
	ResetConversation bool   `protobuf:"varint,4,opt,name=reset_conversation,json=resetConversation,proto3" json:"reset_conversation,omitempty"` // Whether to continue, or to reset the conversation. If this is `false`, it means try to continue (the connection was merely disconnected). Otherwise, it means we're starting anew. Let's give all the options and directions.
}

func (x *UserInput_Hydrate) Reset() {
	*x = UserInput_Hydrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput_Hydrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput_Hydrate) ProtoMessage() {}

func (x *UserInput_Hydrate) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput_Hydrate.ProtoReflect.Descriptor instead.
func (*UserInput_Hydrate) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1, 2}
}

func (x *UserInput_Hydrate) GetSavedState() string {
	if x != nil {
		return x.SavedState
	}
	return ""
}

func (x *UserInput_Hydrate) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *UserInput_Hydrate) GetLastMsgId() uint32 {
	if x != nil {
		return x.LastMsgId
	}
	return 0
}

func (x *UserInput_Hydrate) GetResetConversation() bool {
	if x != nil {
		return x.ResetConversation
	}
	return false
}

type UserInput_Upload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Content  []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UserInput_Upload) Reset() {
	*x = UserInput_Upload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput_Upload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput_Upload) ProtoMessage() {}

func (x *UserInput_Upload) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput_Upload.ProtoReflect.Descriptor instead.
func (*UserInput_Upload) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1, 3}
}

func (x *UserInput_Upload) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UserInput_Upload) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UserInput_Upload) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type UserInput_Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UserInput_Selection) Reset() {
	*x = UserInput_Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput_Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput_Selection) ProtoMessage() {}

func (x *UserInput_Selection) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput_Selection.ProtoReflect.Descriptor instead.
func (*UserInput_Selection) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1, 4}
}

func (x *UserInput_Selection) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *UserInput_Selection) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UserInput_Confirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affirmative bool `protobuf:"varint,1,opt,name=affirmative,proto3" json:"affirmative,omitempty"`
}

func (x *UserInput_Confirmation) Reset() {
	*x = UserInput_Confirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput_Confirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput_Confirmation) ProtoMessage() {}

func (x *UserInput_Confirmation) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput_Confirmation.ProtoReflect.Descriptor instead.
func (*UserInput_Confirmation) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1, 5}
}

func (x *UserInput_Confirmation) GetAffirmative() bool {
	if x != nil {
		return x.Affirmative
	}
	return false
}

type UserInput_DownloadedFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserInput_DownloadedFiles) Reset() {
	*x = UserInput_DownloadedFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput_DownloadedFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput_DownloadedFiles) ProtoMessage() {}

func (x *UserInput_DownloadedFiles) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput_DownloadedFiles.ProtoReflect.Descriptor instead.
func (*UserInput_DownloadedFiles) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{1, 6}
}

type SystemOutput_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markdown string `protobuf:"bytes,1,opt,name=markdown,proto3" json:"markdown,omitempty"`
	Style    string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *SystemOutput_Message) Reset() {
	*x = SystemOutput_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_Message) ProtoMessage() {}

func (x *SystemOutput_Message) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_Message.ProtoReflect.Descriptor instead.
func (*SystemOutput_Message) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SystemOutput_Message) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

func (x *SystemOutput_Message) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

type SystemOutput_ImageWithText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImgUrl   string `protobuf:"bytes,1,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Markdown string `protobuf:"bytes,2,opt,name=markdown,proto3" json:"markdown,omitempty"`
}

func (x *SystemOutput_ImageWithText) Reset() {
	*x = SystemOutput_ImageWithText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_ImageWithText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_ImageWithText) ProtoMessage() {}

func (x *SystemOutput_ImageWithText) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_ImageWithText.ProtoReflect.Descriptor instead.
func (*SystemOutput_ImageWithText) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 1}
}

func (x *SystemOutput_ImageWithText) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *SystemOutput_ImageWithText) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

type SystemOutput_ListSelect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Deprecated: use `action_id` instead
	Labels            []string                           `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"` // These need to be the same length
	Values            []string                           `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	ImageUrls         []string                           `protobuf:"bytes,4,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"` // Optional. If present, same length as the labels and values. Shows a small icon aside of the label text.
	Instructions      string                             `protobuf:"bytes,6,opt,name=instructions,proto3" json:"instructions,omitempty"`            // In Markdown format
	SelectMany        bool                               `protobuf:"varint,8,opt,name=select_many,json=selectMany,proto3" json:"select_many,omitempty"`
	SelectType        SystemOutput_ListSelect_SelectType `protobuf:"varint,7,opt,name=select_type,json=selectType,proto3,enum=sf.codegen.conversation.v1.SystemOutput_ListSelect_SelectType" json:"select_type,omitempty"`
	SelectButtonLabel string                             `protobuf:"bytes,5,opt,name=select_button_label,json=selectButtonLabel,proto3" json:"select_button_label,omitempty"`
}

func (x *SystemOutput_ListSelect) Reset() {
	*x = SystemOutput_ListSelect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_ListSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_ListSelect) ProtoMessage() {}

func (x *SystemOutput_ListSelect) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_ListSelect.ProtoReflect.Descriptor instead.
func (*SystemOutput_ListSelect) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 2}
}

func (x *SystemOutput_ListSelect) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SystemOutput_ListSelect) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SystemOutput_ListSelect) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SystemOutput_ListSelect) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

func (x *SystemOutput_ListSelect) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *SystemOutput_ListSelect) GetSelectMany() bool {
	if x != nil {
		return x.SelectMany
	}
	return false
}

func (x *SystemOutput_ListSelect) GetSelectType() SystemOutput_ListSelect_SelectType {
	if x != nil {
		return x.SelectType
	}
	return SystemOutput_ListSelect_DROPDOWN
}

func (x *SystemOutput_ListSelect) GetSelectButtonLabel() string {
	if x != nil {
		return x.SelectButtonLabel
	}
	return ""
}

type SystemOutput_TextInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt                 string `protobuf:"bytes,8,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Description            string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"` // Markdown
	Placeholder            string `protobuf:"bytes,2,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	DefaultValue           string `protobuf:"bytes,9,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"` // Pre-filled the textbox
	MultiLine              int32  `protobuf:"varint,3,opt,name=multi_line,json=multiLine,proto3" json:"multi_line,omitempty"`         // Number of lines if multiline box.
	ValidationRegexp       string `protobuf:"bytes,4,opt,name=validation_regexp,json=validationRegexp,proto3" json:"validation_regexp,omitempty"`
	ValidationErrorMessage string `protobuf:"bytes,5,opt,name=validation_error_message,json=validationErrorMessage,proto3" json:"validation_error_message,omitempty"`
	SubmitButtonLabel      string `protobuf:"bytes,6,opt,name=submit_button_label,json=submitButtonLabel,proto3" json:"submit_button_label,omitempty"`
	SubmitButtonIcon       string `protobuf:"bytes,7,opt,name=submit_button_icon,json=submitButtonIcon,proto3" json:"submit_button_icon,omitempty"` // icon name or image_url
}

func (x *SystemOutput_TextInput) Reset() {
	*x = SystemOutput_TextInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_TextInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_TextInput) ProtoMessage() {}

func (x *SystemOutput_TextInput) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_TextInput.ProtoReflect.Descriptor instead.
func (*SystemOutput_TextInput) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 3}
}

func (x *SystemOutput_TextInput) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *SystemOutput_TextInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SystemOutput_TextInput) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

func (x *SystemOutput_TextInput) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *SystemOutput_TextInput) GetMultiLine() int32 {
	if x != nil {
		return x.MultiLine
	}
	return 0
}

func (x *SystemOutput_TextInput) GetValidationRegexp() string {
	if x != nil {
		return x.ValidationRegexp
	}
	return ""
}

func (x *SystemOutput_TextInput) GetValidationErrorMessage() string {
	if x != nil {
		return x.ValidationErrorMessage
	}
	return ""
}

func (x *SystemOutput_TextInput) GetSubmitButtonLabel() string {
	if x != nil {
		return x.SubmitButtonLabel
	}
	return ""
}

func (x *SystemOutput_TextInput) GetSubmitButtonIcon() string {
	if x != nil {
		return x.SubmitButtonIcon
	}
	return ""
}

type SystemOutput_Loading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loading bool   `protobuf:"varint,1,opt,name=loading,proto3" json:"loading,omitempty"`
	Label   string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"` // other fields to format the loader and whatnot
}

func (x *SystemOutput_Loading) Reset() {
	*x = SystemOutput_Loading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_Loading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_Loading) ProtoMessage() {}

func (x *SystemOutput_Loading) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_Loading.ProtoReflect.Descriptor instead.
func (*SystemOutput_Loading) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 4}
}

func (x *SystemOutput_Loading) GetLoading() bool {
	if x != nil {
		return x.Loading
	}
	return false
}

func (x *SystemOutput_Loading) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type SystemOutput_DownloadFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*SystemOutput_DownloadFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *SystemOutput_DownloadFiles) Reset() {
	*x = SystemOutput_DownloadFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_DownloadFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_DownloadFiles) ProtoMessage() {}

func (x *SystemOutput_DownloadFiles) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_DownloadFiles.ProtoReflect.Descriptor instead.
func (*SystemOutput_DownloadFiles) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 5}
}

func (x *SystemOutput_DownloadFiles) GetFiles() []*SystemOutput_DownloadFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type SystemOutput_DownloadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename    string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Content     []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SystemOutput_DownloadFile) Reset() {
	*x = SystemOutput_DownloadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_DownloadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_DownloadFile) ProtoMessage() {}

func (x *SystemOutput_DownloadFile) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_DownloadFile.ProtoReflect.Descriptor instead.
func (*SystemOutput_DownloadFile) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 6}
}

func (x *SystemOutput_DownloadFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SystemOutput_DownloadFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SystemOutput_DownloadFile) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SystemOutput_DownloadFile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SystemOutput_Confirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt             string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Description        string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AcceptButtonLabel  string `protobuf:"bytes,2,opt,name=accept_button_label,json=acceptButtonLabel,proto3" json:"accept_button_label,omitempty"`
	DeclineButtonLabel string `protobuf:"bytes,3,opt,name=decline_button_label,json=declineButtonLabel,proto3" json:"decline_button_label,omitempty"`
}

func (x *SystemOutput_Confirm) Reset() {
	*x = SystemOutput_Confirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOutput_Confirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOutput_Confirm) ProtoMessage() {}

func (x *SystemOutput_Confirm) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOutput_Confirm.ProtoReflect.Descriptor instead.
func (*SystemOutput_Confirm) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{2, 7}
}

func (x *SystemOutput_Confirm) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *SystemOutput_Confirm) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SystemOutput_Confirm) GetAcceptButtonLabel() string {
	if x != nil {
		return x.AcceptButtonLabel
	}
	return ""
}

func (x *SystemOutput_Confirm) GetDeclineButtonLabel() string {
	if x != nil {
		return x.DeclineButtonLabel
	}
	return ""
}

type DiscoveryResponse_Generator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IconUrl     string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Endpoint    string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"` // if not the same as this one
}

func (x *DiscoveryResponse_Generator) Reset() {
	*x = DiscoveryResponse_Generator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryResponse_Generator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryResponse_Generator) ProtoMessage() {}

func (x *DiscoveryResponse_Generator) ProtoReflect() protoreflect.Message {
	mi := &file_sf_codegen_conversation_v1_conversation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryResponse_Generator.ProtoReflect.Descriptor instead.
func (*DiscoveryResponse_Generator) Descriptor() ([]byte, []int) {
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DiscoveryResponse_Generator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiscoveryResponse_Generator) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiscoveryResponse_Generator) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiscoveryResponse_Generator) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *DiscoveryResponse_Generator) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

var File_sf_codegen_conversation_v1_conversation_proto protoreflect.FileDescriptor

var file_sf_codegen_conversation_v1_conversation_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x73, 0x66, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1a, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x83, 0x09, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x43, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x66, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x42, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x62, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x21, 0x0a, 0x09, 0x54, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x8d, 0x01, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x07, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x66, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x52, 0x07, 0x68, 0x79, 0x64, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x97, 0x01, 0x0a,
	0x07, 0x48, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x76, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x61, 0x76, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5b, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x1a, 0x37, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x30, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x66, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x61, 0x66, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x11,
	0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xa4, 0x10, 0x0a, 0x0c, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4c,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x60, 0x0a, 0x0f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67,
	0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x56,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e,
	0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x53, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x66, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x4c, 0x0a, 0x07, 0x6c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x66, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x5f, 0x0a, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0x44, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x1a, 0xea, 0x02, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x5f,
	0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e,
	0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x27, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x52, 0x4f, 0x50, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42,
	0x55, 0x54, 0x54, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x1a, 0xf0, 0x02, 0x0a, 0x09, 0x54, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67,
	0x65, 0x78, 0x70, 0x12, 0x38, 0x0a, 0x18, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x07, 0x4c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x1a, 0x5c, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x1a, 0x7a, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0xa5, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x35, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x11, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x8a, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x32, 0xdf, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x28, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x28, 0x01, 0x30, 0x01, 0x12, 0x67, 0x0a,
	0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x73, 0x66, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_codegen_conversation_v1_conversation_proto_rawDescOnce sync.Once
	file_sf_codegen_conversation_v1_conversation_proto_rawDescData = file_sf_codegen_conversation_v1_conversation_proto_rawDesc
)

func file_sf_codegen_conversation_v1_conversation_proto_rawDescGZIP() []byte {
	file_sf_codegen_conversation_v1_conversation_proto_rawDescOnce.Do(func() {
		file_sf_codegen_conversation_v1_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_codegen_conversation_v1_conversation_proto_rawDescData)
	})
	return file_sf_codegen_conversation_v1_conversation_proto_rawDescData
}

var file_sf_codegen_conversation_v1_conversation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sf_codegen_conversation_v1_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_sf_codegen_conversation_v1_conversation_proto_goTypes = []interface{}{
	(SystemOutput_ListSelect_SelectType)(0), // 0: sf.codegen.conversation.v1.SystemOutput.ListSelect.SelectType
	(*Empty)(nil),                           // 1: sf.codegen.conversation.v1.Empty
	(*UserInput)(nil),                       // 2: sf.codegen.conversation.v1.UserInput
	(*SystemOutput)(nil),                    // 3: sf.codegen.conversation.v1.SystemOutput
	(*DiscoveryRequest)(nil),                // 4: sf.codegen.conversation.v1.DiscoveryRequest
	(*DiscoveryResponse)(nil),               // 5: sf.codegen.conversation.v1.DiscoveryResponse
	(*UserInput_TextInput)(nil),             // 6: sf.codegen.conversation.v1.UserInput.TextInput
	(*UserInput_Start)(nil),                 // 7: sf.codegen.conversation.v1.UserInput.Start
	(*UserInput_Hydrate)(nil),               // 8: sf.codegen.conversation.v1.UserInput.Hydrate
	(*UserInput_Upload)(nil),                // 9: sf.codegen.conversation.v1.UserInput.Upload
	(*UserInput_Selection)(nil),             // 10: sf.codegen.conversation.v1.UserInput.Selection
	(*UserInput_Confirmation)(nil),          // 11: sf.codegen.conversation.v1.UserInput.Confirmation
	(*UserInput_DownloadedFiles)(nil),       // 12: sf.codegen.conversation.v1.UserInput.DownloadedFiles
	(*SystemOutput_Message)(nil),            // 13: sf.codegen.conversation.v1.SystemOutput.Message
	(*SystemOutput_ImageWithText)(nil),      // 14: sf.codegen.conversation.v1.SystemOutput.ImageWithText
	(*SystemOutput_ListSelect)(nil),         // 15: sf.codegen.conversation.v1.SystemOutput.ListSelect
	(*SystemOutput_TextInput)(nil),          // 16: sf.codegen.conversation.v1.SystemOutput.TextInput
	(*SystemOutput_Loading)(nil),            // 17: sf.codegen.conversation.v1.SystemOutput.Loading
	(*SystemOutput_DownloadFiles)(nil),      // 18: sf.codegen.conversation.v1.SystemOutput.DownloadFiles
	(*SystemOutput_DownloadFile)(nil),       // 19: sf.codegen.conversation.v1.SystemOutput.DownloadFile
	(*SystemOutput_Confirm)(nil),            // 20: sf.codegen.conversation.v1.SystemOutput.Confirm
	(*DiscoveryResponse_Generator)(nil),     // 21: sf.codegen.conversation.v1.DiscoveryResponse.Generator
}
var file_sf_codegen_conversation_v1_conversation_proto_depIdxs = []int32{
	7,  // 0: sf.codegen.conversation.v1.UserInput.start:type_name -> sf.codegen.conversation.v1.UserInput.Start
	6,  // 1: sf.codegen.conversation.v1.UserInput.text_input:type_name -> sf.codegen.conversation.v1.UserInput.TextInput
	10, // 2: sf.codegen.conversation.v1.UserInput.selection:type_name -> sf.codegen.conversation.v1.UserInput.Selection
	11, // 3: sf.codegen.conversation.v1.UserInput.confirmation:type_name -> sf.codegen.conversation.v1.UserInput.Confirmation
	9,  // 4: sf.codegen.conversation.v1.UserInput.file:type_name -> sf.codegen.conversation.v1.UserInput.Upload
	12, // 5: sf.codegen.conversation.v1.UserInput.downloaded_files:type_name -> sf.codegen.conversation.v1.UserInput.DownloadedFiles
	13, // 6: sf.codegen.conversation.v1.SystemOutput.message:type_name -> sf.codegen.conversation.v1.SystemOutput.Message
	14, // 7: sf.codegen.conversation.v1.SystemOutput.image_with_text:type_name -> sf.codegen.conversation.v1.SystemOutput.ImageWithText
	15, // 8: sf.codegen.conversation.v1.SystemOutput.list_select:type_name -> sf.codegen.conversation.v1.SystemOutput.ListSelect
	16, // 9: sf.codegen.conversation.v1.SystemOutput.text_input:type_name -> sf.codegen.conversation.v1.SystemOutput.TextInput
	20, // 10: sf.codegen.conversation.v1.SystemOutput.confirm:type_name -> sf.codegen.conversation.v1.SystemOutput.Confirm
	17, // 11: sf.codegen.conversation.v1.SystemOutput.loading:type_name -> sf.codegen.conversation.v1.SystemOutput.Loading
	18, // 12: sf.codegen.conversation.v1.SystemOutput.download_files:type_name -> sf.codegen.conversation.v1.SystemOutput.DownloadFiles
	21, // 13: sf.codegen.conversation.v1.DiscoveryResponse.generators:type_name -> sf.codegen.conversation.v1.DiscoveryResponse.Generator
	8,  // 14: sf.codegen.conversation.v1.UserInput.Start.hydrate:type_name -> sf.codegen.conversation.v1.UserInput.Hydrate
	0,  // 15: sf.codegen.conversation.v1.SystemOutput.ListSelect.select_type:type_name -> sf.codegen.conversation.v1.SystemOutput.ListSelect.SelectType
	19, // 16: sf.codegen.conversation.v1.SystemOutput.DownloadFiles.files:type_name -> sf.codegen.conversation.v1.SystemOutput.DownloadFile
	2,  // 17: sf.codegen.conversation.v1.ConversationService.Converse:input_type -> sf.codegen.conversation.v1.UserInput
	4,  // 18: sf.codegen.conversation.v1.ConversationService.Discover:input_type -> sf.codegen.conversation.v1.DiscoveryRequest
	3,  // 19: sf.codegen.conversation.v1.ConversationService.Converse:output_type -> sf.codegen.conversation.v1.SystemOutput
	5,  // 20: sf.codegen.conversation.v1.ConversationService.Discover:output_type -> sf.codegen.conversation.v1.DiscoveryResponse
	19, // [19:21] is the sub-list for method output_type
	17, // [17:19] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_sf_codegen_conversation_v1_conversation_proto_init() }
func file_sf_codegen_conversation_v1_conversation_proto_init() {
	if File_sf_codegen_conversation_v1_conversation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput_TextInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput_Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput_Hydrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput_Upload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput_Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput_Confirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput_DownloadedFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_ImageWithText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_ListSelect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_TextInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_Loading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_DownloadFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_DownloadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOutput_Confirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_codegen_conversation_v1_conversation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryResponse_Generator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sf_codegen_conversation_v1_conversation_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*UserInput_Start_)(nil),
		(*UserInput_TextInput_)(nil),
		(*UserInput_Selection_)(nil),
		(*UserInput_Confirmation_)(nil),
		(*UserInput_File)(nil),
		(*UserInput_DownloadedFiles_)(nil),
	}
	file_sf_codegen_conversation_v1_conversation_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SystemOutput_Message_)(nil),
		(*SystemOutput_ImageWithText_)(nil),
		(*SystemOutput_ListSelect_)(nil),
		(*SystemOutput_TextInput_)(nil),
		(*SystemOutput_Confirm_)(nil),
		(*SystemOutput_Loading_)(nil),
		(*SystemOutput_DownloadFiles_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_codegen_conversation_v1_conversation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sf_codegen_conversation_v1_conversation_proto_goTypes,
		DependencyIndexes: file_sf_codegen_conversation_v1_conversation_proto_depIdxs,
		EnumInfos:         file_sf_codegen_conversation_v1_conversation_proto_enumTypes,
		MessageInfos:      file_sf_codegen_conversation_v1_conversation_proto_msgTypes,
	}.Build()
	File_sf_codegen_conversation_v1_conversation_proto = out.File
	file_sf_codegen_conversation_v1_conversation_proto_rawDesc = nil
	file_sf_codegen_conversation_v1_conversation_proto_goTypes = nil
	file_sf_codegen_conversation_v1_conversation_proto_depIdxs = nil
}
