syntax = "proto3";

package sf.substreams.sink.service.v1;

option go_package = "github.com/streamingfast/substreams/pb/sf/substreams/sink/service/v1;pbsinksvc";

import "sf/substreams/v1/package.proto";
import "sf/substreams/options.proto";

service Provider {
  rpc Deploy(DeployRequest) returns (DeployResponse);
  rpc Remove(RemoveRequest) returns (RemoveResponse);
  rpc Info(InfoRequest) returns (InfoResponse);
  rpc List(ListRequest) returns (ListResponse);
  rpc Pause(PauseRequest) returns (PauseResponse);
  rpc Stop(StopRequest) returns (StopResponse);
  rpc Resume(ResumeRequest) returns (ResumeResponse);
}

message DeployRequest {
  sf.substreams.v1.Package substreams_package = 1;

  // specify deployment_id to update an existing deployment
  optional string deployment_id = 2;
}

message DeployResponse {
  DeploymentStatus status = 1;

  // deployment_id is a short name (max 8 characters) that uniquely identifies your deployment
  string deployment_id = 2;
  
  map<string, string> outputs = 3;
  string reason = 4;
}

message InfoRequest {
  string deployment_id = 1;
}

message InfoResponse {
  DeploymentStatus status = 1;
  map<string, string> outputs = 2;
  string reason = 3;
  PackageInfo package_info = 4;
  SinkProgress progress = 5;
}

message SinkProgress {
    uint64 last_processed_block = 1;
}

message PackageInfo {
    string name = 1;
    string version = 2;
    string output_module_name = 3;
    string output_module_hash = 4;
}

message ListRequest {}

message ListResponse {
  repeated DeploymentWithStatus deployments = 1;
}

message DeploymentWithStatus {
  string  id = 1;
  DeploymentStatus status = 2;
  string reason = 3;
  PackageInfo package_info = 4;
  SinkProgress progress = 5;
}

enum DeploymentStatus {
  UNKNOWN = 0;
  RUNNING = 1;
  FAILING = 2;
  PAUSED = 3;  
  STOPPED = 4;  
}

message RemoveRequest {
  string deployment_id = 1;
}

message RemoveResponse {
  DeploymentStatus previous_status = 1;
}

message PauseRequest {
  string deployment_id = 1;
}

message PauseResponse {
  DeploymentStatus previous_status = 1;
  DeploymentStatus new_status = 2;
}

message StopRequest {
  string deployment_id = 1;
}

message StopResponse {
  DeploymentStatus previous_status = 1;
  DeploymentStatus new_status = 2;
}

message ResumeRequest {
  string deployment_id = 1;
}

message ResumeResponse {
  DeploymentStatus previous_status = 1;
  DeploymentStatus new_status = 2;
}
